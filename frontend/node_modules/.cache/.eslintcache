[{"/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/index.js":"1","/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/reportWebVitals.js":"2","/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/App.js":"3","/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/HomePage.js":"4","/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/ItemPage.js":"5"},{"size":500,"mtime":1618203455036,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1618203455038,"results":"8","hashOfConfig":"7"},{"size":455,"mtime":1620238319324,"results":"9","hashOfConfig":"7"},{"size":3431,"mtime":1620083667591,"results":"10","hashOfConfig":"7"},{"size":11168,"mtime":1621126138910,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"19jtsls",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/index.js",[],["26","27"],"/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/reportWebVitals.js",[],"/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/App.js",["28","29"],"import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter, Route, Switch, Link, Redirect} from 'react-router-dom';\nimport Home from './HomePage'\nimport Item from './ItemPage'\n\nclass App extends React.Component {\n\trender(){\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" component={Home} exact />\n\t\t\t\t\t<Route path=\"/Item\" component={Item}/>\n\t\t\t\t</Switch>\n\t\t\t</div> \n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\n\nexport default App;\n","/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/HomePage.js",["30"],"import React from \"react\";\n// import {withRouter, useHistory} from 'react-router-dom';\nimport logo from \"./price-drop.jpg\"\nimport background from \"./giphy.gif\"\n\nclass Home extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.validate1 = this.validate1.bind(this);\n        this.validate2 = this.validate2.bind(this);\n        this.state = {\n            name: \"\",\n            minPrice: 0,\n            maxPrice: 0,\n            submitButt: false\n        };\n    }\n\n    validate1 = e => {\n        var prod_name = document.getElementById(\"productid\").value;\n        if (prod_name === \"\") {\n            e.preventDefault();\n            document.getElementById(\"warn1\").innerHTML = \"You have not entered product name. Please try again.\"\n        }\n        else {\n            this.setState({\n                name: prod_name,\n                minPrice: 0,\n                maxPrice: 0,\n                submitButt: true\n            })\n        }\n    }\n\n    validate2 = e => {\n        var prod_name = document.getElementById(\"productname\").value\n        var min = document.getElementById(\"minPrice\").value\n        var max = document.getElementById(\"maxPrice\").value\n        if (prod_name === \"\") {\n            e.preventDefault();\n            document.getElementById(\"warn2\").innerHTML = \"You have not entered product name. Please try again.\"\n        }\n        else if (min > max || min < 0 || max < 0) {\n            e.preventDefault();\n            alert(\"Invalid price.\")\n        }\n        else {\n            this.setState({\n                name: prod_name,\n                minPrice: min,\n                maxPrice: max,\n                submitButt: true\n            })\n        }\n    }\n    submitData = e =>{\n        fetch('/product/:').then()//////////////\n        this.props.history.push({\n            pathname:\"/Item\",\n            state: this.state\n        });\n    }\n\n\n\n\n    render(){\n        return (\n            <div class=\"bg\" style={{ backgroundImage: `url(${background})` }}>\n            <div class=\"home\">\n                    <center>\n                        <h1>Welcome to Best Price Tracker</h1>\n                        <p className=\"lead\">\n                        The Best Place to <text style={{color:'green'}}>Save</text> Money\n                        </p>\n                    </center>\n                    <form id=\"seach\"\n                    method=\"post\"\n                    onSubmit={this.submitData}>\n                    <legend>Enter your Product Name here:</legend>\n                    <div id=\"warn1\" style={{color: 'red'}} />\n                    <input type=\"search\" id=\"productid\" placeholder=\"Enter product name here\" size={40} />\n                    <input type=\"submit\" id=\"processIDButton\" onClick={this.validate1} defaultValue=\"Find\" />\n                    <br /><br />or<br /><br />\n                    <legend>Search by Price Range here:</legend>\n                    <p id=\"warn2\" style={{color: 'red'}} />\n                    <input type=\"search\" placeholder=\"Enter product here\" id=\"productname\" size={30} /> from $<input type=\"number\" id=\"minPrice\" min={0} style={{width: '4em'}} /> to $<input type=\"number\" id=\"maxPrice\" min={0} style={{width: '4em'}} />\n                    <br /><br /><input type=\"submit\" defaultValue=\"Search\" onClick={this.validate2}  />\n                    </form>\n            </div>\n            </div>\n            \n        );\n    }\n}\n\n    export default Home;\n","/Users/kwong51/2021_spring/cmsc389nspring2021-kwong/assignments/semesterProject/FinalExam/FinalProjectImplementation/frontend/src/ItemPage.js",["31","32","33","34","35","36","37"],"import React from \"react\";\nimport icon from \"./360_F_293396301_JCm1p815YEbh7ga75XOUuEsaDVlZ2O0C.jpg\"\n\nclass Item extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.stores = this.stores.bind(this)\n        this.history = this.history.bind(this)\n        this.updatesubscribeButton = this.updatesubscribeButton.bind(this)\n        this.subscribeButton = this.subscribeButton.bind(this)\n        // this.updateData = this.updateData.bind(this)\n        // this.getData = this.getData.bind(this)\n        this.cancelsubscribeButton = this.cancelsubscribeButton.bind(this)\n        this.state = {\n            name: \"Product not found\",\n            hisPrice: [],\n            price:0,\n            email:\"\",\n            currStorePrice: -1,\n            storeOption:\"ebay\",\n            lowestHisPrice: -1,\n            hisOption:\"date_max\",\n        };\n    }\n\n    subscribeButton(e){\n        e.preventDefault();\n        if (this.state.email.indexOf('@') === -1) {\n            document.getElementById(\"warn3\").innerHTML = \"Your email address is invalid. Please try again.\";\n        }\n        else if (this.state.price < 0 || this.state.price === \"\") {\n            document.getElementById(\"warn3\").innerHTML = \"Price must be greater or equal to 0.\";\n        }\n        else {\n            let data = {item: this.state.name, email: this.state.email, desired_price: this.state.price}\n            let options ={\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              }\n            fetch('/track', options);\n            alert(\"Your notification has been successfully registered. Please check your email at \" + this.state.email);\n        }\n    }\n\n\n\n\n    updatesubscribeButton(e){\n        e.preventDefault();\n        if (this.state.email.indexOf('@') === -1) {\n            document.getElementById(\"warn3\").innerHTML = \"Your email address is invalid. Please try again.\";\n        }\n        else if (this.state.price < 0 || this.state.price === \"\") {\n            document.getElementById(\"warn3\").innerHTML = \"Price must be greater or equal to 0.\";\n        }\n        else {\n            let data = {item: this.state.name, email: this.state.email, desired_price: this.state.price}\n            let options ={\n                method: 'put',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              }\n            fetch('/track', options).then(res=>res.json())\n            .then(data=> {if (data.success==true) {alert(\"You has been successfully update subscribtion for your email\" + this.state.email)} else {alert(\"Fail to update, please check your email address\")}} )\n        }\n    }\n\n\n\n\n    cancelsubscribeButton(e){\n        e.preventDefault();\n        if (this.state.email.indexOf('@') === -1) {\n            document.getElementById(\"warn3\").innerHTML = \"Your email address is invalid. Please try again.\";\n        }\n        else {\n            let data = {item: this.state.name, email: this.state.email}\n            let options ={\n                method: 'delete',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              }\n            fetch('/track', options).then(res=>res.json())\n            .then(data=> {if (data.success==true) {alert(\"You has been successfully remove subscribtion for your email\" + this.state.email)} else {alert(\"Fail to update, please check your email address\")}} )\n            \n        }\n    }\n\n    stores(e){        \n        let historyPrice = this.state.hisPrice\n        const obj = historyPrice.reduce(function(prev, curr) {return prev.date < curr.date ? prev : curr;});\n        console.log(obj.price)\n        this.setState({\n            storeOption: e.currentTarget.value,\n            currStorePrice: obj.price\n        })\n        // document.getElementById(\"price\").innerHTML = \"$\" + this.state.currStorePrice;\n    }\n\n\n    history(e){\n        let historyPrice = this.state.hisPrice\n        const hisOption = this.state.hisOption\n        const his = {\"date_1w\":7,\"date_1m\":30,\"date_6m\":30*6,\"date_1y\":365,\"date_5y\":365*5,\"date_max\": Infinity};\n        const now = new Date().getTime();\n        \n        const opt = historyPrice.filter(curr => (now-curr.date)/(1000*3600*24) <= his[hisOption])\n        console.log(typeof(opt))\n        console.log((opt))\n        const lastPrice = opt.reduce(function(prev, curr) {return prev.date < curr.date ? prev : curr;});\n        \n        this.setState({\n            hisOption: e.currentTarget.value,\n            lowestHisPrice: lastPrice.price\n            });\n        // document.getElementById(\"lowest\").innerHTML = \"$\" + this.state.lowestHisPrice;\n    }\n\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    not_available(e) {\n        e.preventDefault();\n        alert(\"Sorry, this feature is not allowed at this time\")\n    }\n\n    // getData() {\n    //     fetch('/product')\n    //     .then(res => res.json())\n    //     .then(data => {\n    //     const productData = data.info.filter(prod => prod.item == this.state.name)\n    //     console.log(productData)\n    //     this.setState(\n    //       (prevState) => { return { hisPrice: productData} }\n    //     )\n    //     })\n    // }\n\n    // updateData(){\n    //     let data = {item: this.props.history.location.state.name}\n    //     let options ={\n    //       method: 'post',\n    //       headers: {\n    //         'Content-Type': 'application/json'\n    //       }\n    //       ,body: JSON.stringify(data)\n    //     }\n    //     fetch('/product', options).then(res=>res.json())\n    //     .then(data=>{console.log(data.productName); this.setState((prevState)=>{ return { name: data.productName}})})\n    // }\n\n    async componentDidMount(){\n        let data = {item: this.props.history.location.state.name}\n        let options ={\n          method: 'post',\n          headers: {\n            'Content-Type':'application/json'\n          }\n          ,body: JSON.stringify(data)\n        }\n        const resp = await fetch('/product', options)\n        const json = await resp.json();\n        this.setState({ name: json.productName});\n\n        const resp_d = await fetch('/product')\n        // /'+this.state.name\n        const json_d = await resp_d.json();\n        const productData = json_d.info.filter(prod => prod.item == this.state.name)\n        console.log(productData)\n        this.setState({hisPrice: productData});\n\n        let historyPrice = this.state.hisPrice\n        const obj = historyPrice.reduce(function(prev, curr) {return prev.date < curr.date ? prev : curr;});\n        this.setState({\n            currStorePrice: obj.price\n        })\n\n\n        let history = this.state.hisPrice\n        const hisOption = this.state.hisOption\n        const his = {\"date_1w\":7,\"date_1m\":30,\"date_6m\":30*6,\"date_1y\":365,\"date_5y\":365*5,\"date_max\": Infinity};\n        const now = new Date().getTime();\n        const opt = history.filter(curr => (now-curr.date)/(1000*3600*24) <= his[hisOption])\n        const lastPrice = opt.reduce(function(prev, curr) {return prev.date < curr.date ? prev : curr;});\n        this.setState({\n            lowestHisPrice: lastPrice.price\n        });\n    }\n\n\n    render(){\n        return (\n            <div class=\"item\">\n            <div class=\"top\">\n            <img class=\"icon\" src={icon}></img>\n              <a href=\"/\">Home</a>\n              <a onClick={this.not_available}>Top Price drops</a>\n              <a onClick={this.not_available}>Contact</a>\n              <a onClick={this.not_available}>About</a>\n            </div>\n            <br />\n\n            <div id=\"productt\">{this.state.name}</div>\n            <form class=\"selectstore\">\n                The last available price:<span id=\"price\">${this.state.currStorePrice}</span> on:\n                <br />\n                <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-sm\"><input type=\"radio\" value=\"allstore\" checked={this.state.storeOption===\"allstore\"} onClick={this.stores} />All platforms</div>\n                    <div class=\"col-sm\"><input type=\"radio\" value=\"amazon\" onClick={this.not_available} />Amazon</div>\n                    <div class=\"col-sm\"><input type=\"radio\" value=\"ebay\" checked={this.state.storeOption===\"ebay\"} onClick={this.stores} />Ebay</div>\n                    <div class=\"col-sm\"><input type=\"radio\" value=\"walmart\" onClick={this.not_available} />Walmart</div>\n                    <div class=\"col-sm\"><input type=\"radio\" value=\"anystore\" onClick={this.not_available} />Any Third Party</div>\n                </div>\n                </div>\n            </form>\n\n            <form class=\"date_range\">\n                <div id=\"lowestHis\">Lowest Price History:<span id=\"lowest\">${this.state.lowestHisPrice}</span></div> within Date Range:\n                <div class=\"container\">\n                <div class=\"row\">\n                <div class=\"col-md\"><input type=\"radio\" value=\"date_1w\" checked={this.state.hisOption===\"date_1w\"} onClick={this.history} />1 week</div>\n                    <div class=\"col-md\"><input type=\"radio\" value=\"date_1m\" checked={this.state.hisOption===\"date_1m\"} onClick={this.history} />1 month</div>\n                    <div class=\"col-md\"><input type=\"radio\" value=\"date_6m\" checked={this.state.hisOption===\"date_6m\"} onClick={this.history} />6 months</div>\n                    <div class=\"col-md\"><input type=\"radio\" value=\"date_1y\" checked={this.state.hisOption===\"date_1y\"} onClick={this.history} />1 year</div>\n                    <div class=\"col-md\"><input type=\"radio\" value=\"date_5y\" checked={this.state.hisOption===\"date_5y\"} onClick={this.history} />5 years</div>\n                    <div class=\"col-md\"><input type=\"radio\" value=\"date_max\" checked={this.state.hisOption===\"date_max\"} onClick={this.history} />Max</div>\n                </div>\n                </div>\n                <br />\n            </form>\n\n            <form id=\"pricewatch\" onSubmit={(e)=>{this.subscribeButton(e)}}>\n                <div class=\"droptitle\">Create Price Drop Notification</div>\n                <p>Enter your email address below to receive emails as soon as this price becomes available.</p>\n                <p id=\"warn3\" style={{color:'red'}} />\n                Send Emails to \n                <input type=\"email\" name=\"email\" placeholder=\"your email address\" value={this.state.email} onChange={(e)=>{this.handleChange(e)}} required />\n                 when the Price Drops to\n                $<input type=\"number\" name=\"price\" value={this.state.price} onChange={(e)=>{this.handleChange(e)}} style={{width:'4em'}} required />\n                <input type=\"submit\" id=\"pricetrackButton\" value=\"Submit\" />\n                <input type=\"button\" onClick= {(e)=>{this.updatesubscribeButton(e)}} value=\"update\"/>\n                <input type=\"button\" onClick= {(e)=>{this.cancelsubscribeButton(e)}} value=\"Unsubscribe\"/>\n            </form>\n            </div>\n        );\n    }\n}\n\nexport default Item;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":4,"column":40,"nodeType":"44","messageId":"45","endLine":4,"endColumn":44},{"ruleId":"42","severity":1,"message":"46","line":4,"column":46,"nodeType":"44","messageId":"45","endLine":4,"endColumn":54},{"ruleId":"42","severity":1,"message":"47","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":69,"column":43,"nodeType":"50","messageId":"51","endLine":69,"endColumn":45},{"ruleId":"48","severity":1,"message":"49","line":91,"column":43,"nodeType":"50","messageId":"51","endLine":91,"endColumn":45},{"ruleId":"48","severity":1,"message":"49","line":177,"column":66,"nodeType":"50","messageId":"51","endLine":177,"endColumn":68},{"ruleId":"52","severity":1,"message":"53","line":204,"column":13,"nodeType":"54","endLine":204,"endColumn":42},{"ruleId":"55","severity":1,"message":"56","line":206,"column":15,"nodeType":"54","endLine":206,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":207,"column":15,"nodeType":"54","endLine":207,"endColumn":47},{"ruleId":"55","severity":1,"message":"56","line":208,"column":15,"nodeType":"54","endLine":208,"endColumn":47},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'logo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]